name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/README.md'
      - '**/CHANGELOG.md'
      - 'deps-lock.json'
      - 'resources/CLOJURE_LSP_VERSION'
      - 'docs/**'
      - 'images/**'
      - 'mkdocs.yml'
      - '.github/workflows/bump_deps.yml'
      - '.github/workflows/bump_downstreams.yml'
      - '.github/workflows/nightly.yml'
      - '.github/workflows/docs.yml'
      - '.github/workflows/release.yml'

  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - name: Check if namespaces are clean
        run: bb lint-clean

      - name: Check if namespaces are formatted
        run: bb lint-format

      - name: Check if namespaces have no diagnostics
        run: bb lint-diagnostics

  unit-test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [8, 11, 15, 17]
        include:
          - os: windows-latest
            jdk: 8
          - os: macos-latest
            jdk: 8
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - name: Run tests
        run: bb test

  jvm-integration-test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [8, 11, 15, 17]
        include:
          - os: windows-latest
            jdk: 8
          - os: macos-latest
            jdk: 8
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Install clojure build tools
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          lein: '2.9.1'
          boot: '2.8.3'
          bb: '0.9.161'

      - name: Install launch4j
        if: startsWith (matrix.os, 'windows')
        run: |
          iwr -UserAgent "Wget" -URI "https://sourceforge.net/projects/launch4j/files/launch4j-3/3.14/launch4j-3.14-win32.exe/download" -OutFile "$env:TEMP/l4j-installer.exe"
          Start-Process -Filepath "$env:TEMP/l4j-installer.exe" -ArgumentList "/S"
        shell: pwsh

      - name: Generate embedded binary
        env: # only relevant to the MS-Windows job.
          LAUNCH4J_HOME: "C:\\Program Files (x86)\\Launch4j"
        run: bb prod-cli

      - name: Run integration tests
        run: bb integration-test

      - name: Run babashka pod tests
        run: bb pod-test

  graalvm-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '11'
          components: 'native-image'
          native-image-musl: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Linux native image
        env:
          CLOJURE_LSP_XMX: "-J-Xmx6g"
          CLOJURE_LSP_STATIC: true
          CLOJURE_LSP_MUSL: true
        run: |
          bb native-cli

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: clojure-lsp-native
          path: clojure-lsp

  graalvm-integration-test:
    needs: graalvm-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Install clojure build tools
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          lein: '2.9.1'
          boot: '2.8.3'
          bb: '0.9.161'

      - uses: actions/download-artifact@v2
        name: clojure-lsp-native

      - name: Setup binary
        run: |
          cp -rf clojure-lsp-native/clojure-lsp cli/clojure-lsp
          cp -rf clojure-lsp-native/clojure-lsp clojure-lsp
          chmod +x cli/clojure-lsp
          chmod +x clojure-lsp

      - name: Run babashka pod tests
        env:
          CLOJURE_LSP_TEST_ENV: native
        run: bb pod-test

      - name: Run integration tests
        run: bb integration-test
