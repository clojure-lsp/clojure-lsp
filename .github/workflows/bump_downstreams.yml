name: Bump downstreams

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  release-clojars:
    name: Release artifact to Clojars
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.814'

      - name: Build prod-jar
        run: make prod-jar

      - uses: jlesquembre/clojars-publish-action@0.4
        env:
          USE_GIT_REF: false
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}

  bump-homebrew-formula:
    name: Bump Homebrew formula
    needs: [release-clojars]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: release.yml
          workflow_conclusion: success

      - name: Get new version sha256
        id: sha256
        env:
          VERSION: ${{ steps.latest-tag.outputs.tag }}
        run: |
          macsha256=$(shasum -a 256 clojure-lsp-native-macos-amd64.zip/clojure-lsp-native-macos-amd64.zip | awk '{print $1}')
          linuxsha256=$(shasum -a 256 clojure-lsp-native-linux-amd64.zip/clojure-lsp-native-linux-amd64.zip | awk '{print $1}')
          echo "::set-output name=macsha256::$macsha256"
          echo "::set-output name=linuxsha256::$linuxsha256"

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Bump Homebrew formula
        env:
          VERSION: ${{ steps.latest-tag.outputs.tag }}
          MAC_SHA256: ${{ steps.sha256.outputs.macsha256 }}
          LINUX_SHA256: ${{ steps.sha256.outputs.linuxsha256 }}
        run: |
          git config --global user.name "Clojure LSP Bot"
          git config --global user.email "ercdll1337+clojure-lsp@gmail.com"
          mkdir ~/.ssh && touch ~/.ssh/id_rsa
          echo "${{ secrets.CLOJURE_LSP_BOT_COMMIT_TOKEN }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          git clone git@github.com:clojure-lsp/homebrew-brew.git
          cd homebrew-brew
          bb -o render.clj --version "${{ env.VERSION }}" --mac-sha "${{ env.MAC_SHA256 }}" --linux-sha "${{ env.LINUX_SHA256 }}" > clojure-lsp-native.rb
          cat clojure-lsp-native.rb
          git add .
          git commit -m "Bump to version: ${{ env.VERSION }}"
          git push

  bump-setup-clojure-lsp:
    name: Bump setup-clojure-lsp Github Action
    needs: [release-clojars]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Update version in files
        env:
          VERSION: ${{ steps.latest-tag.outputs.tag }}
        run: |
          git config --global user.name "Clojure LSP Bot"
          git config --global user.email "ercdll1337+clojure-lsp@gmail.com"
          mkdir ~/.ssh && touch ~/.ssh/id_rsa
          echo "${{ secrets.CLOJURE_LSP_BOT_COMMIT_TOKEN }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          git clone git@github.com:clojure-lsp/setup-clojure-lsp.git
          cd setup-clojure-lsp
          sed -i "s/clojure-lsp-version: .*/clojure-lsp-version: ${{ env.VERSION }}/g" README.md .github/workflows/self_check.yml .github/workflows/main.yml
          git add README.md .github/workflows/self_check.yml .github/workflows/main.yml
          git commit -m "Bump to version: ${{ env.VERSION }}"
          git push

  bump-lein-clojure-lsp:
    name: Bump lein-clojure-lsp
    needs: [release-clojars]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Update version in files
        env:
          VERSION: ${{ steps.latest-tag.outputs.tag }}
        run: |
          git config --global user.name "Clojure LSP Bot"
          git config --global user.email "ercdll1337+clojure-lsp@gmail.com"
          mkdir ~/.ssh && touch ~/.ssh/id_rsa
          echo "${{ secrets.CLOJURE_LSP_BOT_COMMIT_TOKEN }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          git clone git@github.com:clojure-lsp/lein-clojure-lsp.git
          cd lein-clojure-lsp
          bb tag-patch-for-version "${{ env.VERSION }}"
