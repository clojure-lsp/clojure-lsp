name: Nightly builds

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/README.md'
      - '**/CHANGELOG.md'
      - 'resources/CLOJURE_LSP_VERSION'
      - 'docs/**'
      - 'images/**'
      - 'mkdocs.yml'
      - 'deps-lock.json'
      - '.github/workflows/bump_deps.yml'
      - '.github/workflows/bump_downstreams.yml'
      - '.github/workflows/ci.yml'
      - '.github/workflows/docs.yml'
      - '.github/workflows/release.yml'

jobs:
  release-dev-build:
    name: Release dev build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.dev-tag.outputs.tag}}
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Generate dev tag name
        id: dev-tag
        run: |
          VERSION=$(date -u +"%Y.%m.%d-%H.%M.%S")
          echo "::set-output name=tag::$VERSION-nightly"

      - id: commit-hash
        uses: pr-mpt/actions-commit-hash@v1

      - name: Create dev release
        id: create_dev_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          tag_name: ${{ steps.dev-tag.outputs.tag}}
          prerelease: false
          repository: clojure-lsp/clojure-lsp-dev-builds
          body: https://github.com/clojure-lsp/clojure-lsp/commit/${{ steps.commit-hash.outputs.hash }}

  build-cli-jar:
    needs: release-dev-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - name: Update nightly version
        run: |
          echo ${{ needs.release-dev-build.outputs.tag}} > lib/resources/CLOJURE_LSP_VERSION

      - name: Generate jar for native
        run: bb cli-jar-for-native

      # Remove after all places are using clojure-lsp-dev-builds
      - name: Upload jar
        uses: actions/upload-artifact@v3
        with:
          path: clojure-lsp-standalone.jar
          name: clojure-lsp-standalone.jar

      - name: Upload to dev release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          prerelease: false
          repo_name: clojure-lsp/clojure-lsp-dev-builds
          file: clojure-lsp-standalone.jar
          asset_name: clojure-lsp-standalone.jar
          tag: ${{ needs.release-dev-build.outputs.tag}}

  linux-amd64:
    needs: [build-cli-jar, release-dev-build]
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp-standalone.jar

      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: 22.3.0
          java: java11

      - name: Install native-image component
        run: |
          gu install native-image

      - name: Build Linux native image
        env:
          CLOJURE_LSP_JAR: "../clojure-lsp-standalone.jar"
          CLOJURE_LSP_XMX: "-J-Xmx6g"
        run: |
          bb native-cli

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp

      # Remove after all places are using clojure-lsp-dev-builds
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: clojure-lsp
          name: clojure-lsp-native-linux-amd64

      - name: Zip binary
        run: zip clojure-lsp-native-linux-amd64.zip clojure-lsp

      - name: Upload to dev release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          prerelease: false
          repo_name: clojure-lsp/clojure-lsp-dev-builds
          file: clojure-lsp-native-linux-amd64.zip
          asset_name: clojure-lsp-native-linux-amd64.zip
          tag: ${{ needs.release-dev-build.outputs.tag}}

  linux-amd64-static:
    needs: [build-cli-jar, release-dev-build]
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp-standalone.jar

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.0'
          java-version: '11'
          components: 'native-image'
          native-image-musl: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build static Linux native image
        env:
          CLOJURE_LSP_JAR: "../clojure-lsp-standalone.jar"
          CLOJURE_LSP_XMX: "-J-Xmx6g"
          CLOJURE_LSP_STATIC: true
          CLOJURE_LSP_MUSL: true
        run: |
          bb native-cli

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp

      # Remove after all places are using clojure-lsp-dev-builds
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: clojure-lsp
          name: clojure-lsp-native-static-linux-amd64

      - name: Zip binary
        run: zip clojure-lsp-native-static-linux-amd64.zip clojure-lsp

      - name: Upload to dev release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          prerelease: false
          repo_name: clojure-lsp/clojure-lsp-dev-builds
          file: clojure-lsp-native-static-linux-amd64.zip
          asset_name: clojure-lsp-native-static-linux-amd64.zip
          tag: ${{ needs.release-dev-build.outputs.tag}}

  macos:
    needs: [build-cli-jar, release-dev-build]
    continue-on-error: true
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp-standalone.jar

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: 22.3.0
          java: java11

      - name: Install native-image component
        run: |
          gu install native-image

      - name: Build MacOS native image
        env:
          CLOJURE_LSP_JAR: "../clojure-lsp-standalone.jar"
          CLOJURE_LSP_XMX: "-J-Xmx6g"
        run: |
          bb native-cli

      # Remove after all places are using clojure-lsp-dev-builds
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: clojure-lsp
          name: clojure-lsp-native-macos-amd64

      - name: Zip binary
        run: zip clojure-lsp-native-macos-amd64.zip clojure-lsp

      - name: Upload to dev release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          prerelease: false
          repo_name: clojure-lsp/clojure-lsp-dev-builds
          file: clojure-lsp-native-macos-amd64.zip
          asset_name: clojure-lsp-native-macos-amd64.zip
          tag: ${{ needs.release-dev-build.outputs.tag}}

  windows:
    needs: [build-cli-jar, release-dev-build]
    continue-on-error: true
    runs-on: windows-2022
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp-standalone.jar

      - name: configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 8GB
          maximum-size: 16GB

      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.1013'
          bb: '0.9.161'

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: 22.2.0
          java: java11

      - name: Install native-image component
        run: |
          gu.cmd install native-image

      - name: Build Windows native image
        env:
          CLOJURE_LSP_JAR: ..\clojure-lsp-standalone.jar
          CLOJURE_LSP_XMX: "-J-Xmx7g"
        run: |
          bb native-cli

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp.exe

      # Remove after all places are using clojure-lsp-dev-builds
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: clojure-lsp.exe
          name: clojure-lsp-native-windows-amd64

      - name: Zip binary
        run: |
          jar -cMf clojure-lsp-native-windows-amd64.zip clojure-lsp.exe

      - name: Upload to dev release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          prerelease: false
          repo_name: clojure-lsp/clojure-lsp-dev-builds
          file: clojure-lsp-native-windows-amd64.zip
          asset_name: clojure-lsp-native-windows-amd64.zip
          tag: ${{ needs.release-dev-build.outputs.tag}}

  # Change to point to clojure-lsp-dev-builds after all places are using clojure-lsp-dev-builds
  notify:
    needs: [release-dev-build, build-cli-jar, linux-amd64, linux-amd64-static, macos]
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Notify Clojurians Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.CLOJURIANS_SLACK_WEBHOOK }}
          SLACK_USERNAME: "clojure-lsp-bot"
          SLACK_ICON_EMOJI: ":clojure-lsp:"
          SLACK_TITLE: "New nightly build"
          SLACK_MESSAGE: |
            https://github.com/clojure-lsp/clojure-lsp-dev-builds/releases/download/${{ needs.release-dev-build.outputs.tag}}/clojure-lsp-standalone.jar
            https://github.com/clojure-lsp/clojure-lsp-dev-builds/releases/download/${{ needs.release-dev-build.outputs.tag}}/clojure-lsp-native-linux-amd64.zip
            https://github.com/clojure-lsp/clojure-lsp-dev-builds/releases/download/${{ needs.release-dev-build.outputs.tag}}/clojure-lsp-native-static-linux-amd64.zip
            https://github.com/clojure-lsp/clojure-lsp-dev-builds/releases/download/${{ needs.release-dev-build.outputs.tag}}/clojure-lsp-native-macos-amd64.zip
            https://github.com/clojure-lsp/clojure-lsp-dev-builds/releases/download/${{ needs.release-dev-build.outputs.tag}}/clojure-lsp-native-macos-aarch64.zip
            https://github.com/clojure-lsp/clojure-lsp-dev-builds/releases/download/${{ needs.release-dev-build.outputs.tag}}/clojure-lsp-native-windows-amd64.zip
          MSG_MINIMAL: true
