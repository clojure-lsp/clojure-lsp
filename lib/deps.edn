{:deps {org.clojure/clojure {:mvn/version "1.11.3"}
        rewrite-clj/rewrite-clj {:mvn/version "1.1.47"}
        borkdude/rewrite-edn {:mvn/version "0.4.8" :exclusions [rewrite-clj/rewrite-clj]}
        org.clojure/core.async {:mvn/version "1.6.681"}
        dev.weavejester/cljfmt {:mvn/version "0.12.0"
                                :exclusions [rewrite-cljs/rewrite-cljs
                                             com.googlecode.java-diff-utils/diffutils]}
        com.googlecode.java-diff-utils/diffutils {:mvn/version "1.3.0"}
        medley/medley {:mvn/version "1.4.0"}
        anonimitoraf/clj-flx {:mvn/version "1.2.0"}
        clj-kondo/clj-kondo {:mvn/version "2024.08.01"
                             #_#_:local/root "../../clj-kondo"
                             :exclude [com.cognitect/transit-clj
                                       babashka/fs]}
        com.fabiodomingues/clj-depend {:mvn/version "0.11.0"}
        com.cognitect/transit-clj {:mvn/version "1.0.333"}
        com.github.clj-easy/stub {:mvn/version "0.2.3"}
        org.benf/cfr {:mvn/version "0.152"}

        babashka/fs {:mvn/version "0.5.22"}
        com.github.clojure-lsp/lsp4clj {:mvn/version "1.10.0"
                                        #_#_:local/root "../../lsp4clj"
                                        :exclusions [funcool/promesa]}}
 :paths ["src" "resources"]
 :aliases {:test {:extra-deps {clojure-lsp/common-test {:local/root "../common-test"}
                               lambdaisland/kaocha {:mvn/version "1.87.1366"}
                               com.taoensso/timbre {:mvn/version "6.3.1"}
                               org.clojure/test.check {:mvn/version "1.1.1"}}
                  :jvm-opts ["-XX:-OmitStackTraceInFastThrow"]
                  :extra-paths ["test"]
                  :main-opts ["-m" "kaocha.runner"]}
           :cognitest {:extra-paths ["test"]
                       :extra-deps {clojure-lsp/common-test {:local/root "../common-test"}
                                    io.github.cognitect-labs/test-runner
                                    {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
                       :main-opts ["-m" "cognitect.test-runner"]
                       :exec-fn cognitect.test-runner.api/test}
           :build {:extra-paths ["resources"]
                   :deps {io.github.clojure/tools.build {:git/url "https://github.com/clojure/tools.build.git"
                                                         :tag "v0.9.6"
                                                         :sha "8e78bcc"}
                          slipset/deps-deploy {:mvn/version "0.2.2"}}
                   :ns-default build}}}
