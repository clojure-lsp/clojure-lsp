name: Release

on:
  push:
    tags:
      - 2*

jobs:
  build-jvm:
    if: startsWith(github.ref, 'refs/tags/2')
    name: Build JVM jar and embedded jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.814'

      - name: Generate jar and embedded jar
        run: make prod-bin

      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp.jar
          name: clojure-lsp.jar

      - name: Upload embedded jar
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp
          name: clojure-lsp

  linux-amd64:
    name: Build native linux amd64 binary
    needs: build-jvm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp.jar

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.814'

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: 21.1.0.java11

      - name: Install native-image component
        run: |
          gu install native-image

      - name: Build Linux native image
        env:
          CLOJURE_LSP_JAR: clojure-lsp.jar
          CLOJURE_LSP_XMX: "-J-Xmx6g"
        run: |
          graalvm/native-unix-compile.sh

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp

      - name: Run integration tests
        run: |
          make integration-test

      - name: Zip binary
        run: zip clojure-lsp-native-linux-amd64.zip clojure-lsp

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp-native-linux-amd64.zip
          name: clojure-lsp-native-linux-amd64.zip

  linux-amd64-static:
    name: Build native linux amd64 static binary
    needs: build-jvm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp.jar

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.814'

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: 21.1.0.java11

      - name: Install native-image component
        run: |
          gu install native-image

      - name: Build static Linux native image
        env:
          CLOJURE_LSP_JAR: clojure-lsp.jar
          CLOJURE_LSP_XMX: "-J-Xmx6g"
          CLOJURE_LSP_STATIC: true
        run: |
          graalvm/native-unix-compile.sh

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp

      # Not working, check #296
      # - name: Run integration tests
      #   run: |
      #     make integration-test

      - name: Zip binary
        run: zip clojure-lsp-native-static-linux-amd64.zip clojure-lsp

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp-native-static-linux-amd64.zip
          name: clojure-lsp-native-static-linux-amd64.zip

  # linux-aarch64:
  #   name: Build native linux aarch64 binary
  #   needs: build-jvm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: clojure-lsp.jar

  #     - name: Install Clojure
  #       uses: DeLaGuardo/setup-clojure@master
  #       with:
  #         cli: '1.10.3.814'

  #     - name: Install GraalVM
  #       uses: DeLaGuardo/setup-graalvm@master
  #       with:
  #         graalvm-version: 21.1.0.java11
  #         arch: 'aarch64'

  #     - name: Install native-image component
  #       run: |
  #         gu install native-image

  #     - name: Build
  #       env:
  #         CLOJURE_LSP_JAR: clojure-lsp.jar
  #         CLOJURE_LSP_XMX: "-J-Xmx6g"
  #       run: |
  #         graalvm/native-unix-compile.sh

  #     - name: Zip binary
  #       run: zip clojure-lsp-native-linux-aarch64.zip clojure-lsp

  #     - name: Upload
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: clojure-lsp-native-linux-aarch64.zip
  #         name: clojure-lsp-native-linux-aarch64.zip

  macos:
    name: Build native MacOS binary
    needs: build-jvm
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp.jar

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.3.814'

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: 21.1.0.java11

      - name: Install native-image component
        run: |
          gu install native-image

      - name: Build MacOS native image
        env:
          CLOJURE_LSP_JAR: clojure-lsp.jar
          CLOJURE_LSP_XMX: "-J-Xmx6g"
        run: |
          graalvm/native-unix-compile.sh

      # UPX is not working for MacOS Big Sur
      # - name: Compress binary
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: clojure-lsp

      - name: Run integration tests
        run: |
          make integration-test

      - name: Zip binary
        run: zip clojure-lsp-native-macos-amd64.zip clojure-lsp

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp-native-macos-amd64.zip
          name: clojure-lsp-native-macos-amd64.zip

  windows:
    name: Build native Windows binary
    needs: build-jvm
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: clojure-lsp.jar

      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Clojure
        run: |
          iwr -useb download.clojure.org/install/win-install-1.10.3.814.ps1 | iex

      - name: Install Babashka
        run: |
          iwr -useb get.scoop.sh | iex
          scoop bucket add scoop-clojure https://github.com/littleli/scoop-clojure
          scoop bucket add extras
          scoop install babashka --independent
          echo "$HOME\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: 21.1.0.java11

      - name: Install native-image component
        run: |
          gu.cmd install native-image

      - name: Build Windows native image
        env:
          CLOJURE_LSP_JAR: clojure-lsp.jar
          CLOJURE_LSP_XMX: "-J-Xmx6g"
        run: |
          .\graalvm\native-windows-compile.bat

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: clojure-lsp.exe

      # Windows return the json in the same line but for some reason clients seems to accept that.
      # - name: Run integration tests
      #   run: |
      #     bb integration-test/run-all.clj .\clojure-lsp.exe

      - name: Zip binary
        run: |
          jar -cMf clojure-lsp-native-windows-amd64.zip clojure-lsp.exe

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: clojure-lsp-native-windows-amd64.zip
          name: clojure-lsp-native-windows-amd64.zip

  release:
    name: Create Release
    needs: [build-jvm, linux-amd64, linux-amd64-static, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
        with:
          tag_name: ${{ steps.latest-tag.outputs.tag}}
          release_name: ${{ steps.latest-tag.outputs.tag}}

  upload-to-release:
    name: Upload artifacts to release
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - uses: actions/download-artifact@v2

      - name: Upload JVM
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          file: clojure-lsp.jar/clojure-lsp.jar
          asset_name: clojure-lsp.jar
          tag: ${{ steps.latest-tag.outputs.tag}}

      - name: Upload JVM unix embbeded jar
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          file: clojure-lsp/clojure-lsp
          asset_name: clojure-lsp
          tag: ${{ steps.latest-tag.outputs.tag}}

      - name: Upload JVM Windows embedded jar
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          file: clojure-lsp/clojure-lsp
          asset_name: clojure-lsp.bat
          tag: ${{ steps.latest-tag.outputs.tag}}

      - name: Upload Linux amd64 native binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          file: clojure-lsp-native-linux-amd64.zip/clojure-lsp-native-linux-amd64.zip
          asset_name: clojure-lsp-native-linux-amd64.zip
          tag: ${{ steps.latest-tag.outputs.tag }}

      - name: Upload static Linux amd64 native binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          file: clojure-lsp-native-static-linux-amd64.zip/clojure-lsp-native-static-linux-amd64.zip
          asset_name: clojure-lsp-native-static-linux-amd64.zip
          tag: ${{ steps.latest-tag.outputs.tag }}

      # - name: Upload Linux aarch64 native binary
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
      #     file: clojure-lsp-native-linux-aarch64.zip/clojure-lsp-native-linux-aarch64.zip
      #     asset_name: clojure-lsp-native-linux-aarch64.zip
      #     tag: ${{ steps.latest-tag.outputs.tag }}

      - name: Upload MacOS native binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          file: clojure-lsp-native-macos-amd64.zip/clojure-lsp-native-macos-amd64.zip
          asset_name: clojure-lsp-native-macos-amd64.zip
          tag: ${{ steps.latest-tag.outputs.tag}}

      - name: Upload Windows native binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.CLOJURE_LSP_BOT_TOKEN }}
          file: clojure-lsp-native-windows-amd64.zip/clojure-lsp-native-windows-amd64.zip
          asset_name: clojure-lsp-native-windows-amd64.zip
          tag: ${{ steps.latest-tag.outputs.tag}}

  bump-homebrew-formula:
    name: Bump Homebrew formula
    needs: [upload-to-release]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest tag
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - uses: actions/download-artifact@v2

      - name: Get new version sha256
        id: sha256
        env:
          VERSION: ${{ steps.latest-tag.outputs.tag }}
        run: |
          macsha256=$(shasum -a 256 clojure-lsp-native-macos-amd64.zip/clojure-lsp-native-macos-amd64.zip | awk '{print $1}')
          linuxsha256=$(shasum -a 256 clojure-lsp-native-linux-amd64.zip/clojure-lsp-native-linux-amd64.zip | awk '{print $1}')
          echo "::set-output name=macsha256::$macsha256"
          echo "::set-output name=linuxsha256::$linuxsha256"

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Bump Homebrew formula
        env:
          VERSION: ${{ steps.latest-tag.outputs.tag }}
          MAC_SHA256: ${{ steps.sha256.outputs.macsha256 }}
          LINUX_SHA256: ${{ steps.sha256.outputs.linuxsha256 }}
        run: |
          git config --global user.name "Clojure LSP Bot"
          git config --global user.email "ercdll1337+clojure-lsp@gmail.com"
          mkdir ~/.ssh && touch ~/.ssh/id_rsa
          echo "${{ secrets.CLOJURE_LSP_BOT_BREW_COMMIT_TOKEN }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          git clone git@github.com:clojure-lsp/homebrew-brew.git
          cd homebrew-brew
          bb -o render.clj --version "${{ env.VERSION }}" --mac-sha "${{ env.MAC_SHA256 }}" --linux-sha "${{ env.LINUX_SHA256 }}" > clojure-lsp-native.rb
          cat clojure-lsp-native.rb
          git add .
          git commit -m "Bump to version: ${{ env.VERSION }}"
          git push
